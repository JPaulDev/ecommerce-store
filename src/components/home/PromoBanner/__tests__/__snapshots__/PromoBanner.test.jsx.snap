// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PromoBanner component renders a promotional banner about RTX studio 1`] = `
.c4 {
  background: linear-gradient(to top,#858484,#a0a0a0);
  border-radius: 6px;
  box-shadow: var(--shadow-button);
  color: white;
  display: inline-block;
  font-size: 0.8rem;
  font-weight: 700;
  padding: 12px 14px;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: uppercase;
}

.c4:hover {
  background: linear-gradient(to top,#858484,#737373);
  box-shadow: var(--shadow-button-hover);
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: var(--color-grey-8);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.8rem;
  font-weight: 700;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: uppercase;
}

.c6 svg {
  margin-left: 10px;
}

.c0 {
  background-color: #ebebeb;
  background-image: url(/img.jpg);
  background-position: calc(100% + 220px) 50%;
  background-repeat: no-repeat;
  background-size: auto 186px;
  border: 1px solid var(--color-grey-9);
  margin-top: 15px;
  min-height: 185px;
  overflow: hidden;
  padding: 15px;
  position: relative;
}

.c1 {
  font-family: 'Uni Sans',sans-serif;
  font-size: 1.75rem;
}

.c2 {
  font-family: 'Uni Sans Book',sans-serif;
  font-size: 1.06rem;
  line-height: 1.3;
  margin: 4px 0 10px;
  width: 45%;
}

.c7 {
  position: absolute;
  right: 25px;
  top: 25px;
}

.c8 {
  bottom: -110px;
  position: absolute;
  right: -70px;
}

@media screen and (min-width:0px) {
  .c3 {
    display: none;
  }
}

@media screen and (min-width:530px) {
  .c3 {
    display: block;
  }
}

@media screen and (min-width:0px) {
  .c5 {
    display: block;
  }
}

@media screen and (min-width:530px) {
  .c5 {
    display: none;
  }
}

@media screen and (min-width:550px) {
  .c0 {
    padding: 15px 25px;
  }
}

@media screen and (min-width:750px) {
  .c0 {
    background-position: calc(100% + 345px) 50%;
    background-size: auto 291px;
    min-height: 250px;
    padding: 25px;
  }
}

@media screen and (min-width:850px) {
  .c0 {
    background-position: center;
  }
}

@media screen and (min-width:750px) {
  .c1 {
    font-size: 2.6rem;
  }
}

@media screen and (min-width:750px) {
  .c2 {
    font-size: 1.2rem;
    width: 35%;
  }
}

@media screen and (max-width:849px) {
  .c7 {
    display: none;
  }
}

@media screen and (min-width:750px) {
  .c8 {
    right: 10px;
  }
}

<div
  className="c0"
>
  <h4
    className="c1"
  >
    RTX Studio
  </h4>
  <p
    className="c2"
  >
    The best laptops and desktops for creating anywhere.
  </p>
  <div
    className="c3"
  >
    <a
      className="c4"
      href="/"
      onClick={[Function]}
      onMouseEnter={[Function]}
      onTouchStart={[Function]}
    >
      Find Out More
    </a>
  </div>
  <div
    className="c5"
  >
    <a
      className="c6"
      href="/"
      onClick={[Function]}
      onMouseEnter={[Function]}
      onTouchStart={[Function]}
    >
      Find Out More
      <svg
        fill="currentColor"
        height={18}
        viewBox="0 0 512 512"
        width={18}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 256C0 397.4 114.6 512 256 512s256-114.6 256-256S397.4 0 256 0S0 114.6 0 256zM241 377c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l87-87-87-87c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L345 239c9.4 9.4 9.4 24.6 0 33.9L241 377z"
        />
      </svg>
    </a>
  </div>
  <div
    className="c7"
  >
    <img
      alt=""
      data-nimg="future"
      decoding="async"
      height={24}
      loading="lazy"
      onError={[Function]}
      onLoad={[Function]}
      src="/_next/image?url=%2Fimg.jpg&w=48&q=75"
      srcSet="/_next/image?url=%2Fimg.jpg&w=32&q=75 1x, /_next/image?url=%2Fimg.jpg&w=48&q=75 2x"
      style={
        {
          "color": "transparent",
        }
      }
      width={24}
    />
  </div>
  <div
    className="c8"
  >
    <img
      alt=""
      data-nimg="future"
      decoding="async"
      height={24}
      loading="lazy"
      onError={[Function]}
      onLoad={[Function]}
      src="/_next/image?url=%2Fimg.jpg&w=48&q=75"
      srcSet="/_next/image?url=%2Fimg.jpg&w=32&q=75 1x, /_next/image?url=%2Fimg.jpg&w=48&q=75 2x"
      style={
        {
          "color": "transparent",
        }
      }
      width={24}
    />
  </div>
</div>
`;
